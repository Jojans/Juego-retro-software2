name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: space_arcade_test
          POSTGRES_USER: spacearcade
          POSTGRES_PASSWORD: password123
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U spacearcade -d space_arcade_test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd frontend && npm ci
        cd ../backend && npm ci
    
    - name: Lint frontend
      run: |
        cd frontend
        npm run lint
    
    - name: Lint backend
      run: |
        cd backend
        npm run lint
    
    - name: Type check frontend
      run: |
        cd frontend
        npm run type-check
    
    - name: Type check backend
      run: |
        cd backend
        npm run type-check
    
    - name: Test frontend
      run: |
        cd frontend
        npm test -- --coverage --watchAll=false
    
    - name: Test backend
      run: |
        cd backend
        npm test -- --coverage
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
    
    - name: Build backend
      run: |
        cd backend
        npm run build

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/space-arcade-frontend:latest
          ${{ secrets.DOCKER_USERNAME }}/space-arcade-frontend:${{ github.sha }}
    
    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/space-arcade-backend:latest
          ${{ secrets.DOCKER_USERNAME }}/space-arcade-backend:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      run: |
        echo "Deployment would happen here"
        # Add your deployment commands here
        # For example: kubectl apply -f k8s/ or docker-compose up -d
