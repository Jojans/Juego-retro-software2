services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: space-arcade-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: space_arcade
      POSTGRES_USER: spacearcade
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password123}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - space-arcade-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U spacearcade -d space_arcade"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: space-arcade-backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-4000}
      DATABASE_URL: ${DATABASE_URL:-postgres://spacearcade:password123@postgres:5432/space_arcade}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost:3000}
    ports:
      - "${PORT:-4000}:${PORT:-4000}"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - space-arcade-network
    volumes:
      - ./backend/uploads:/app/uploads
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: space-arcade-frontend
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:4000/api}
      REACT_APP_WS_URL: ${REACT_APP_WS_URL:-http://localhost:4000}
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - space-arcade-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  space-arcade-network:
    driver: bridge
